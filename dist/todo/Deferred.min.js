function Deferred(){this.state=Deferred.state.unfulfilled,this.promise=new Promise}Deferred.state={unfulfilled:"unfulfilled",fulfilled:"fulfilled",failed:"failed"},Deferred.prototype.resolve=function(e){this.state=Deferred.state.fulfilled;for(var r,i=this.promise;r=i.queue.shift();)if(r&&r.fulfilled){var f=r.fulfilled(e);if(f&&f.isPromise)return f.queue=i.queue,void(this.promise=f)}},Deferred.prototype.reject=function(e){for(var r,i=this.promise;r=i.queue.shift();)if(r&&r.error){var f=r.error(e);if(f&&f.isPromise)return f.queue=i.queue,void(this.promise=f)}},Deferred.prototype.callback=function(){var e=this;return function(r,i){return r?e.reject(r):void e.resolve(i)}};